install.packages('caTools')
install.packages("caTools", type = "source")
library(caTools)
#import dataset
dataset = read.csv('Data.csv')
#Taking care of missing values
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
#Encoding categorical data
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
library(caTools)
set.seed(123)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
setwd("~/Documents/Machine Learning A-Z/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
#import dataset
dataset = read.csv('Data.csv')
#Taking care of missing values
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
#Encoding categorical data
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
library(caTools)
set.seed(123)
split = sample.split(Y = dataset$Purchased, SplitRatio = 0.8)
split
train_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(train_set)
#Feature scaling
train_set[, 2:3] = scale(train_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
View(test_set)
View(train_set)
setwd("~/Documents/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression")
#import dataset
dataset = read.csv('Salary.csv')
#import dataset
dataset = read.csv('Salary_Data.csv')
View(dataset)
View(dataset)
#Split dataset
library(caTools)
set.seed(123)
split = sample.split(Y = dataset$Salary, SplitRatio = 0.8)
train_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(train_set)
#Fitting LinerRegression Model
lr = lm(formula = Salary ~ YearsExperience,
data = train_set)
View(lr)
summary(lr)
#Prediction on test set
y_pred = predict(lr,test_set)
y_pred
test_set
#Visualization
install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot() +
geom_point(aes(x = train_set$YearsExperience, y = train_set$Salary),
colour = 'red') +
geom_line(aes(x = train_set$YearsExperience, y = predict(lr,train_set)),
colour = 'blue') +
ggtitle("Salary vs Experience(Training set)") +
xlab("Years of Experience") +
ylab("Salary in USD")
#Test set
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = train_set$YearsExperience, y = predict(lr,train_set)),
colour = 'blue') +
ggtitle("Salary vs Experience(Testing set)") +
xlab("Years of Experience") +
ylab("Salary in USD")
